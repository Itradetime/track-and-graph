/*
 *  This file is part of Track & Graph
 *
 *  Track & Graph is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  Track & Graph is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with Track & Graph.  If not, see <https://www.gnu.org/licenses/>.
 */


plugins {
    id 'org.jetbrains.kotlin.android'
    id 'com.android.library'
    id 'kotlin-kapt'
    id "dagger.hilt.android.plugin"
}

android {
    compileSdk 33

    defaultConfig {
        minSdk 23
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

        sourceSets {
            androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
        }

        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas".toString())
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debugMinify {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = "17"
        //Using experimental kotlin co-routines api's
        freeCompilerArgs += "-opt-in=kotlin.RequiresOptIn"
    }
    namespace 'com.samco.trackandgraph.base'
}

dependencies {
    api libs.threetenabp

    api libs.core.ktx
    //Apparently we need material for the instrumented tests to build. idk why
    api libs.material

    //Dependency Injection
    implementation libs.hilt.android
    kapt libs.hilt.compiler

    //Database
    kapt libs.room.compiler
    api libs.room.runtime
    api libs.room.ktx
    api libs.moshi.kotlin
    kapt libs.moshi.kotlin.codegen

    //CSV
    implementation libs.commons.csv

    //Timber
    api libs.timber

    testImplementation libs.mockito.kotlin
    testImplementation libs.kotlinx.coroutines.test
    testImplementation libs.junit

    androidTestImplementation libs.room.testing
    androidTestImplementation libs.runner
    androidTestImplementation libs.junit.ktx
    androidTestImplementation libs.espresso.core
}